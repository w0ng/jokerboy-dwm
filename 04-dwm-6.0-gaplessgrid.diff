Homepage: http://hg.punctweb.ro

--- a/dwm.c	2012-07-22 14:56:54.135763978 +0300
+++ b/dwm.c	2012-07-22 14:56:54.137763978 +0300
@@ -270,6 +270,7 @@ static void pushdown(const Arg *arg);
 static void cycle(const Arg *arg);
 static int shifttag(int dist);
 static void tagcycle(const Arg *arg);
+static void gaplessgrid(Monitor *m);
 
 /* variables */
 static const char broken[] = "broken";
@@ -2351,6 +2352,40 @@ tagcycle(const Arg *arg) {
 	view(&a);
 }
 
+void
+gaplessgrid(Monitor *m) {
+	unsigned int n, cols, rows, cn, rn, i, cx, cy, cw, ch;
+	Client *c;
+
+	for(n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
+	if(n == 0)
+		return;
+
+	/* grid dimensions */
+	for(rows = 0; rows <= n/2; rows++)
+		if(rows*rows >= n)
+			break;
+	if(n == 5) /* set layout against the general calculation: not 1:2:2, but 2:3 */
+		rows = 2;
+	cols = n/rows;
+
+	/* window geometries */
+	ch = rows ? m->wh / rows : m->wh;
+	for(i = cn = rn = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++) {
+		if(i/cols + 1 > rows - n%rows)
+			cols = n/rows + 1;
+		cw = cols ? m->ww / cols : m->ww;
+		cx = m->wx + cn*cw;
+		cy = m->wy + rn*ch;
+		resize(c, cx, cy, cw - (2*c->bw), ch - (2*c->bw), False);
+		cn++;
+		if(cn >= cols) {
+			cn = 0;
+			rn++;
+		}
+	}
+}
+
 int
 main(int argc, char *argv[]) {
 	if(argc == 2 && !strcmp("-v", argv[1]))
